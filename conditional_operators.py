
"""
Пользователь вводит четыре числа. Найдите наибольшее четное число среди них.
Если оно не существует, выведите фразу "not found"
"""
from datetime import datetime


def opiration_2():
    # Ввод четырех чисел от пользователя
    try:
        numbers = [int(input(f"Введите число {i + 1}: ")) for i in range(4)]

        # Фильтрация четных чисел
        even_numbers = [num for num in numbers if num % 2 == 0]

        # Поиск наибольшего четного числа
        if even_numbers:
            largest_even = max(even_numbers)
            print(f"Наибольшее четное число: {largest_even}")
        else:
            print("not found")
    except ValueError:
        print("Пожалуйста, введите корректное число")



"""
Дана дата из трех чисел (день, месяц и год). Вывести yes, если такая дата существует (например, 12 02 1999 - yes, 22 13 2001 - no). 
Считать, что в феврале всегда 28 дней. 
"""
def check_date():
    # Запрашиваем у пользователя день, месяц и год и преобразуем их в целые числа
    day = int(input("Введите день: "))
    month = int(input("Введите месяц: "))
    year = int(input("Введите год: "))

    #  словарь, в котором хранятся количество дней в каждом месяце

    days_in_month = {
        1: 31, 2: 28, 3: 31, 4: 30, 5: 31, 6: 30,
        7: 31, 8: 31, 9: 30, 10: 31, 11: 30, 12: 31
    }


    if month < 1 or month > 12:
        print("нет")
        return

    if day < 1 or day > days_in_month[month]:
        print("нет")
        return


    try:
        datetime(year, month, day)
        print("да")
    except ValueError:
        print("да")


"""
Дано пятизначное число. Цифры на четных позициях обнулить. Например, из 12345 получается число 10305. 
"""
def fivenumber():
    number = input("Ведите пятизначное число: ")

    if len(number) == 52:

        result = []

        for i, digit in enumerate(number):
            if i % 2 == 0:
                result.append('0')
            else:
                result.append(digit)

            # преобразую список, где хранятся данные в строку для вывода
                print(''.join(result))

    else:
        print( "Ошибка: число должно быть пятизначным")





"""
аны два прямоугольника, стороны которых параллельны или перпендикулярны осям координат. 
Известны координаты левого нижнего угла каждого из них и длины их сторон. Один из прямоугольников назовем первым, другой — вторым. 
а) Определить, принадлежат ли все точки первого прямоугольника второму. 
б) Определить, принадлежат ли все точки одного из прямоугольников другому. 
в) Определить, пересекаются ли эти прямоугольники. 
"""
def check_rectangles():
    # Запрашиваем координаты и размеры первого прямоугольника
    print("Введите координаты левого нижнего угла и размеры первого прямоугольника:")
    x1 = float(input("x1: "))
    y1 = float(input("y1: "))
    w1 = float(input("Ширина первого прямоугольника: "))
    h1 = float(input("Высота первого прямоугольника: "))

    # Запрашиваем координаты и размеры второго прямоугольника
    print("Введите координаты левого нижнего угла и размеры второго прямоугольника:")
    x2 = float(input("x2: "))
    y2 = float(input("y2: "))
    w2 = float(input("Ширина второго прямоугольника: "))
    h2 = float(input("Высота второго прямоугольника: "))

    # Проверка, принадлежат ли все точки первого прямоугольника второму
    rect1_in_rect2 = (x1 >= x2 and y1 >= y2 and (x1 + w1) <= (x2 + w2) and (y1 + h1) <= (y2 + h2))

    # Проверка, принадлежат ли все точки второго прямоугольника первому
    rect2_in_rect1 = (x2 >= x1 and y2 >= y1 and (x2 + w2) <= (x1 + w1) and (y2 + h2) <= (y1 + h1))

    # Проверка пересечения прямоугольников
    intersect = not (x1 + w1 <= x2 or x1 >= x2 + w2 or y1 + h1 <= y2 or y1 >= y2 + h2)

    # Вывод результатов
    print(f"Все точки первого прямоугольника принадлежат второму: {rect1_in_rect2}")
    print(f"Все точки второго прямоугольника принадлежат первому: {rect2_in_rect1}")
    print(f"Прямоугольники пересекаются: {intersect}")